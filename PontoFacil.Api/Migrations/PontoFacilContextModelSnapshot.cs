// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PontoFacil.Api.Modelo.Contexto;

#nullable disable

namespace PontoFacil.Api.Migrations
{
    [DbContext(typeof(PontoFacilContext))]
    partial class PontoFacilContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PontoFacil.Api.Modelo.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraUltimaAlteracaoLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Conta");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.SessaoAberta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraUltimaAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HexVerificacao")
                        .HasColumnType("longtext");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("SessaoAberta");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Acesso", b =>
                {
                    b.HasOne("PontoFacil.Api.Modelo.Recurso", "IdRecursoNavegacao")
                        .WithMany("AcessoMuitosNavegacao")
                        .HasForeignKey("IdRecurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PontoFacil.Api.Modelo.Usuario", "IdUsuarioNavegacao")
                        .WithMany("AcessoMuitosNavegacao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdRecursoNavegacao");

                    b.Navigation("IdUsuarioNavegacao");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Conta", b =>
                {
                    b.HasOne("PontoFacil.Api.Modelo.Usuario", "IdUsuarioNavegacao")
                        .WithMany("ContaMuitosNavegacao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuarioNavegacao");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.SessaoAberta", b =>
                {
                    b.HasOne("PontoFacil.Api.Modelo.Usuario", "IdUsuarioNavegacao")
                        .WithMany("SessaoAbertaMuitosNavegacao")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuarioNavegacao");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Recurso", b =>
                {
                    b.Navigation("AcessoMuitosNavegacao");
                });

            modelBuilder.Entity("PontoFacil.Api.Modelo.Usuario", b =>
                {
                    b.Navigation("AcessoMuitosNavegacao");

                    b.Navigation("ContaMuitosNavegacao");

                    b.Navigation("SessaoAbertaMuitosNavegacao");
                });
#pragma warning restore 612, 618
        }
    }
}
